name: Deploy-OCP

on:
  # Allow manual triggering
  workflow_dispatch:

  # Trigger on release publish
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: OCP Static Deployment
      url: ${{ secrets.ENVIRONMENT_URL }}
    steps:
      # ssh configuration based on https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.INSTANCE_IP }}
      - name: Stop the bot
        run: ssh deployment 'tmux kill-session -t ${{ secrets.TMUX_SESSION_NAME }}'
      - name: Check out at latest tag
        run: |
          ssh deployment '
            cd mid-bot
            git fetch
            git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
          '
      - name: Install requirements
        run: |
          ssh deployment '
            cd mid-bot
            pip install -r requirements.txt
          '
      - name: Set DISCORD_TOKEN
        run: ssh deployment "echo 'DISCORD_TOKEN=$DISCORD_TOKEN' > ~/mid-bot/.env"
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      - name: Run the bot
        run: |
          ssh deployment '
            cd mid-bot
            tmux new-session -d -s ${{ secrets.TMUX_SESSION_NAME }} "~/mid-bot/run_bot.sh"
          '
