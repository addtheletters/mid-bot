name: Deploy-OCP

on:
  # Allow manual triggering
  workflow_dispatch:

  # Trigger on release publish
  release:
    types: [published]

jobs:
  # Deploys to a remote host over SSH.
  # Assumes that the repo has previously been cloned into `~/mid-bot`.
  # Will run the bot within a tmux session, attempting to kill a previously running session of the same name.
  deploy:
    runs-on: ubuntu-latest
    environment: OCP Static Deployment
    steps:
      # ssh configuration based on https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
      - name: Configure SSH
        env:
            SSH_USER: ${{ secrets.SSH_USER }}
            SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_HOST: ${{ secrets.INSTANCE_IP }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
      - name: Stop bot
        env:
          SESSION: ${{ secrets.TMUX_SESSION_NAME }}
        run: ssh deployment "tmux kill-session -t $SESSION"
        continue-on-error: true
      - name: Check out at the triggering commit
        env:
          GIT_SHA: ${{ github.sha }}
        run: |
          ssh deployment '
            cd mid-bot
            git fetch
            git checkout $GIT_SHA
          '
      - name: Install requirements
        run: |
          ssh deployment '
            cd mid-bot
            pip install -r requirements.txt
          '
      - name: Set DISCORD_TOKEN
        env:
            DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        run: ssh deployment "echo 'DISCORD_TOKEN=$DISCORD_TOKEN' > ~/mid-bot/.env"
      - name: Run bot
        env:
            SESSION: ${{ secrets.TMUX_SESSION_NAME }}
        run: |
          ssh deployment "
            cd mid-bot
            tmux new-session -d -s $SESSION '~/mid-bot/run_bot.sh'
          "
